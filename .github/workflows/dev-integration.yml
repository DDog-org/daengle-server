# Actions 탭에 나타날 Workflow 이름
name: Java CI with Gradle

# Workflow가 실행되지 위한 조건(트리거)
# develop 브랜치에 push, pull request가 일어 났을 경우 Actions가 실행됨
on:
  pull_request:
    branches: [ "develop" ]

# Workflow의 job 목록
jobs:
  build: #job 이름

    runs-on: ubuntu-latest   #Runner가 실행되는 환경 정의
    permissions:
      contents: read

    steps:       # build job 내의 step 목록
      - uses: actions/checkout@v4
      - name: Set up JDK 17      #java 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build -Dspring.profiles.active=test
        env:
          JWT_SECRET: ${{ secrets.jwt_secret_key }} # GitHub Secrets에서 환경 변수 가져오기

      - name: Run Tests
        run: ./gradlew test -Dspring.profiles.active=test

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0